version: '3.8'

services:
  web: &web
    build: ./
    image: umbrella_production_web
    container_name: umbrella_production_web
    command: bash -c "
        python wait_for_postgres.py &&
        ./manage.py migrate --noinput &&
        ./manage.py collectstatic --noinput &&
        gunicorn config.wsgi:application --bind 0.0.0.0:8000
      "
    volumes:
      - ./:/code
    expose:
      - 8000
    env_file:
      - .envs/.prod
      - .envs/.prod.db

  nginx-proxy:
    build: compose/nginx
    image: umbrella_production_nginx_proxy
    container_name: umbrella_production_nginx_proxy
    restart: always
    ports:
      - 443:443
      - 80:80
    volumes:
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
      - /var/run/docker.sock:/tmp/docker.sock:ro
    depends_on:
      - web

  nginx-proxy-letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: umbrella_production_nginx_proxy_companion
    env_file:
      - .envs/.prod.proxy-companion
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
      - acme:/etc/acme.sh
    depends_on:
      - nginx-proxy

  celeryworker:
    <<: *web
    image: umbrella_production_celeryworker
    container_name: umbrella_production_celeryworker
    depends_on:
      - redis
      - postgres
    ports: [ ]
    command: celery -A config.celery_app worker -l INFO -E

  flower:
    <<: *web
    image: umbrella_production_flower
    container_name: umbrella_production_flower
    ports:
      - "5555:5555"
    command: ./compose/start-flower

  redis:
    image: redis:6
    container_name: umbrella_production_redis
    ports:
      - 6379:6379

volumes:
  postgres_data:
  certs:
  html:
  vhost:
  acme:
