name: Umbrella Workflows (testing)
on: push

jobs:
  container-job:
    runs-on: ubuntu-latest
    container: python:3.10.1

    services:
      umbrella_db:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: umbrella
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      # keycloak:
      #  image: quay.io/keycloak/keycloak:16.0.0
      #  env:
      #    KEYCLOAK_USER: admin
      #    KEYCLOAK_PASSWORD: admin
      #    DB_VENDOR: postgres
      #    DB_ADDR: postgres
      #    DB_PORT: 5432
      #    DB_PASSWORD: postgres
      #  options: >-
      #    --health-cmd "curl --fail http://localhost:8080/auth/realms/master || exit 1"
      #    --health-start-period 1m
      #    --health-interval 1m
      #    --health-timeout 10s
      #    --health-retries 5

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Install pipenv
        run: python -m pip install --upgrade pipenv wheel
      # - id: cache-pipenv
      #   uses: actions/cache@v1
      #   with:
      #     path: ~/.local/share/virtualenvs
      #     key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}
      - name: Install environment
        # if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: pipenv install --deploy --dev
      - name: Migrate DB
        working-directory: ./backend
        run: pipenv run python manage.py migrate
        env:
          DB_HOST: umbrella_db
      - name: Tests with coverage
        working-directory: ./backend
        run: pipenv run pytest --cov=umbrella
        env:
          DB_HOST: umbrella_db
      - name: Code quality check with pylint
        run: pipenv run pylint --load-plugins pylint_django --load-plugins pylint_django.checkers.migrations --django-settings-module=backend.settings backend/umbrella

# id=$(docker create --health-cmd "curl --fail http://localhost:8080/auth/realms/master || exit 1" --health-interval 30s --health-timeout 3s --health-retries 3 -e "KEYCLOAK_USER=admin" quay.io/keycloak/keycloak:16.0.0)
# docker start $id
# docker ps --all --filter id=$id --filter status=running --no-trunc --format "{{.ID}} {{.Status}}"
# docker port $id
# docker inspect --format="{{if .Config.Healthcheck}}{{print .State.Health.Status}}{{end}}" $id
