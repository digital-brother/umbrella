# Generated by Django 4.0.1 on 2022-04-02 03:06

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contracts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500, validators=[django.core.validators.MinLengthValidator(5)])),
                ('due_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('progress', models.CharField(choices=[('NOT_STARTED', 'Not Started'), ('IN_PROGRESS', 'In Progress'),
                                                       ('COMPLETED', 'Completed')], default='NOT_STARTED',
                                              max_length=32)),
                ('notes', models.TextField(blank=True)),
                ('status', models.CharField(
                    choices=[('DONE', 'Done'), ('OVERDUE', 'Overdue'), ('DUE_TODAY', 'Due Today'),
                             ('DUE_IN_A_WEEK', 'Due in a Week'), ('DUE_IN_A_MONTH', 'Due in a Month'),
                             ('NOT_DUE_SOON', 'Not Due Soon')], default='OVERDUE', max_length=32)),
                ('contract_clause_type', models.TextField()),
                ('contract_business_intelligence_type', models.TextField()),
                ('link_to_contract_text', models.TextField()),
                ('reminder_number', models.PositiveIntegerField(default=1)),
                ('reminder_period',
                 models.CharField(choices=[('DAYS', 'Days'), ('WEEKS', 'Weeks'), ('MONTHS', 'Months')], default='DAYS',
                                  max_length=32)),
                ('reminder_before_or_after',
                 models.CharField(choices=[('BEFORE', 'Before'), ('AFTER', 'After')], default='BEFORE', max_length=32)),
                ('reminder_repeats', models.CharField(
                    choices=[('NEVER', 'Not Never'), ('EVERYDAY', 'Everyday'), ('EVERY_WEEK', 'Every week'),
                             ('EVERY_MONTH', 'Every month')], default='NEVER', max_length=32)),
                ('reminder_until', models.DateField(blank=True, null=True)),
                ('assignees', models.ManyToManyField(blank=True, related_name='tasks', to=settings.AUTH_USER_MODEL)),
                ('contract', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contracts.lease')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Subtask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128)),
                ('is_done', models.BooleanField(default=False)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subtasks',
                                           to='tasks.task')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('created_at', models.DateField(auto_now_add=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL,
                                                 to=settings.AUTH_USER_MODEL)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments',
                                           to='tasks.task')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
